package setting;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Vector;

import jdbc.DbManager;
import messge.Msg;

public class DbCreat {
	public DbCreat() {
		// TODO Auto-generated constructor stub
		int result = DbManager.db.setDb("-- MySQL Script generated by MySQL Workbench\r\n"
				+ "-- Sat Mar  4 21:43:10 2023\r\n" + "-- Model: New Model    Version: 1.0\r\n"
				+ "-- MySQL Workbench Forward Engineering\r\n" + "\r\n"
				+ "SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\r\n"
				+ "SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\r\n"
				+ "SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\r\n"
				+ "\r\n" + "-- -----------------------------------------------------\r\n" + "-- Schema 2023지방_2_1\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP SCHEMA IF EXISTS `2023지방_2_1` ;\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n" + "-- Schema 2023지방_2_1\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "CREATE SCHEMA IF NOT EXISTS `2023지방_2_1` DEFAULT CHARACTER SET utf8 ;\r\n" + "USE `2023지방_2_1` ;\r\n"
				+ "\r\n" + "-- -----------------------------------------------------\r\n"
				+ "-- Table `2023지방_2_1`.`division`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "CREATE TABLE IF NOT EXISTS `2023지방_2_1`.`division` (\r\n"
				+ "  `d_no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `d_name` VARCHAR(50) NULL,\r\n"
				+ "  PRIMARY KEY (`d_no`))\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n" + "-- Table `2023지방_2_1`.`book`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "CREATE TABLE IF NOT EXISTS `2023지방_2_1`.`book` (\r\n"
				+ "  `b_no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `b_name` VARCHAR(50) NULL,\r\n"
				+ "  `d_no` INT(11) NULL,\r\n" + "  `b_author` VARCHAR(50) NULL,\r\n" + "  `b_count` INT(11) NULL,\r\n"
				+ "  `b_page` INT(11) NULL,\r\n" + "  `b_exp` VARCHAR(500) NULL,\r\n" + "  `b_img` LONGBLOB NULL,\r\n"
				+ "  PRIMARY KEY (`b_no`),\r\n" + "  INDEX `fk_book_division_idx` (`d_no` ASC) VISIBLE,\r\n"
				+ "  CONSTRAINT `fk_book_division`\r\n" + "    FOREIGN KEY (`d_no`)\r\n"
				+ "    REFERENCES `2023지방_2_1`.`division` (`d_no`)\r\n" + "    ON DELETE NO ACTION\r\n"
				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n" + "-- Table `2023지방_2_1`.`user`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "CREATE TABLE IF NOT EXISTS `2023지방_2_1`.`user` (\r\n"
				+ "  `u_no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `u_name` VARCHAR(5) NULL,\r\n"
				+ "  `u_id` VARCHAR(10) NULL,\r\n" + "  `u_pw` VARCHAR(10) NULL,\r\n" + "  PRIMARY KEY (`u_no`))\r\n"
				+ "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "-- Table `2023지방_2_1`.`likebook`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "CREATE TABLE IF NOT EXISTS `2023지방_2_1`.`likebook` (\r\n"
				+ "  `l_no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `u_no` INT(11) NULL,\r\n"
				+ "  `b_no` INT(11) NULL,\r\n" + "  PRIMARY KEY (`l_no`),\r\n"
				+ "  INDEX `fk_likebook_book1_idx` (`b_no` ASC) VISIBLE,\r\n"
				+ "  INDEX `fk_likebook_user1_idx` (`u_no` ASC) VISIBLE,\r\n" + "  CONSTRAINT `fk_likebook_book1`\r\n"
				+ "    FOREIGN KEY (`b_no`)\r\n" + "    REFERENCES `2023지방_2_1`.`book` (`b_no`)\r\n"
				+ "    ON DELETE NO ACTION\r\n" + "    ON UPDATE NO ACTION,\r\n"
				+ "  CONSTRAINT `fk_likebook_user1`\r\n" + "    FOREIGN KEY (`u_no`)\r\n"
				+ "    REFERENCES `2023지방_2_1`.`user` (`u_no`)\r\n" + "    ON DELETE NO ACTION\r\n"
				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n" + "-- Table `2023지방_2_1`.`rental`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "CREATE TABLE IF NOT EXISTS `2023지방_2_1`.`rental` (\r\n"
				+ "  `r_no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `u_no` INT(11) NULL,\r\n"
				+ "  `b_no` INT(11) NULL,\r\n" + "  `r_date` DATE NULL,\r\n" + "  `r_count` INT(11) NULL,\r\n"
				+ "  `r_reading` INT(11) NULL,\r\n" + "  `r_returnday` DATE NULL,\r\n" + "  PRIMARY KEY (`r_no`),\r\n"
				+ "  INDEX `fk_rental_user1_idx` (`u_no` ASC) VISIBLE,\r\n"
				+ "  INDEX `fk_rental_book1_idx` (`b_no` ASC) VISIBLE,\r\n" + "  CONSTRAINT `fk_rental_user1`\r\n"
				+ "    FOREIGN KEY (`u_no`)\r\n" + "    REFERENCES `2023지방_2_1`.`user` (`u_no`)\r\n"
				+ "    ON DELETE NO ACTION\r\n" + "    ON UPDATE NO ACTION,\r\n" + "  CONSTRAINT `fk_rental_book1`\r\n"
				+ "    FOREIGN KEY (`b_no`)\r\n" + "    REFERENCES `2023지방_2_1`.`book` (`b_no`)\r\n"
				+ "    ON DELETE NO ACTION\r\n" + "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n"
				+ "set global local_infile = true;\r\n"
				+ "load data local infile './datafiles/user.txt' into table 2023지방_2_1.user lines terminated by '\\r' ignore 1 lines;\r\n"
				+ "load data local infile './datafiles/division.txt' into table 2023지방_2_1.division lines terminated by '\\r' ignore 1 lines;\r\n"
				+ "load data local infile './datafiles/book.txt' into table 2023지방_2_1.book lines terminated by '\\r\\n' ignore 1 lines;\r\n"
				+ "load data local infile './datafiles/likebook.txt' into table 2023지방_2_1.likebook lines terminated by '\\r' ignore 1 lines;\r\n"
				+ "load data local infile './datafiles/rental.txt' into table 2023지방_2_1.rental lines terminated by '\\r' ignore 1 lines;\r\n"
				+ "\r\n" + "drop user if exists 'user'@'localhost';\r\n"
				+ "create user 'user'@'localhost' identified by '1234';\r\n"
				+ "grant select, insert, update, delete on 2023지방_2_1.* to 'user'@'localhost';\r\n" + "\r\n"
				+ "SET SQL_MODE=@OLD_SQL_MODE;\r\n" + "SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\r\n"
				+ "SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\r\n" + "");

		Vector<Vector<String>> bookIndex = DbManager.db.getDb("SELECT * FROM 2023지방_2_1.book;");
		for (Vector<String> row : bookIndex) {
			File file = new File("./datafiles/book/" + row.get(0) + ".jpg");

			try {
				FileInputStream img = new FileInputStream(file);
				DbManager.db.setDb("UPDATE `2023지방_2_1`.`book` SET `b_img` = ? WHERE (`b_no` = ?);", img, row.get(0));

			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			System.out.println(file + "번 이미지 올리기 성공");

		}

		if (result == -1) {
			Msg.error("셋팅 실패");
			return;
		}
		Msg.info("셋팅 성공");

	}
}
